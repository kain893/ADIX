#!/usr/bin/env python3

from aiogram import Bot, types
from database import SessionLocal, Sale, User
from decimal import Decimal

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –≤ —Ä—É—Å—Å–∫—É—é —Ñ–æ—Ä–º—É:
STATUS_TRANSLATIONS = {
    "pending": "–û–∂–∏–¥–∞–Ω–∏–µ",
    "approved": "–û–¥–æ–±—Ä–µ–Ω–æ",
    "rejected": "–û—Ç–∫–ª–æ–Ω–µ–Ω–æ",
    "completed": "–ó–∞–≤–µ—Ä—à–µ–Ω–æ",
    "canceled": "–û—Ç–º–µ–Ω–µ–Ω–æ",
    "open": "–û—Ç–∫—Ä—ã—Ç",
    "closed": "–ó–∞–∫—Ä—ã—Ç"
}


def calc_chat_price(chat, qty: int) -> float:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–∑–º–µ—â–µ–Ω–∏—è `qty` (=1,5,10 ‚Ä¶) –ø–æ—Å—Ç–æ–≤
    –≤ –æ–±—ä–µ–∫—Ç–µ ChatGroup `chat`.

    ‚Ä¢ –µ—Å–ª–∏ –≤ –ë–î —è–≤–Ω–æ —É–∫–∞–∑–∞–Ω–∞ —Ü–µ–Ω–∞ –¥–ª—è –ø–∞–∫–µ—Ç–∞ (price_5 / price_10),
      –±–µ—Ä—ë–º –µ—ë;
    ‚Ä¢ –µ—Å–ª–∏ –∫–æ–ª–æ–Ω–∫–∞ –ø—É—Å—Ç–∞ (0 –∏–ª–∏ None) ‚Äî –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–∫–∞—Ç—ã–≤–∞–µ–º—Å—è
      –∫ ¬´—Ü–µ–Ω–∞_–∑–∞_1 √ó qty¬ª, —á—Ç–æ–±—ã –Ω–µ —Å–ª–æ–º–∞—Ç—å —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏.
    """
    if qty == 1:
        return float(chat.price_1)

    if qty == 5 and (chat.price_5 or 0) > 0:
        return float(chat.price_5)

    if qty == 10 and (chat.price_10 or 0) > 0:
        return float(chat.price_10)

    # fallback –¥–ª—è –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö qty –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ü–µ–Ω
    return float(chat.price_1) * qty

def rus_status(status: str) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä—É—Å—Å–∫–∏–π –≤–∞—Ä–∏–∞–Ω—Ç —Å—Ç–∞—Ç—É—Å–∞."""
    return STATUS_TRANSLATIONS.get(status, status)

def main_menu_keyboard():
    """
    –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞).
    """
    return types.ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [ types.KeyboardButton(text="‚ûï–†–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ"), types.KeyboardButton(text="üîç–ü–æ–∏—Å–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–π") ],
        [ types.KeyboardButton(text="üìú–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"), types.KeyboardButton(text="–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å") ]
    ])

async def post_ad_to_chat(bot: Bot, chat_id, ad_object, user):
    """
    –ü—É–±–ª–∏–∫—É–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —á–∞—Ç/–∫–∞–Ω–∞–ª.
    –í–º–µ—Å—Ç–æ "[–†–ï–ö–õ–ê–ú–ê]" —Ç–µ–ø–µ—Ä—å –≤—ã–≤–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å).
    """
    inn_info = user.inn or "‚Äî"
    fio_info = user.full_name or user.company_name or "‚Äî"

    # –ï—Å–ª–∏ —É –æ–±—ä—è–≤–ª–µ–Ω–∏—è –µ—Å—Ç—å inline_button_text, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë —Å–≤–µ—Ä—Ö—É:
    title_line = ad_object.inline_button_text if ad_object.inline_button_text else "–û–±—ä—è–≤–ª–µ–Ω–∏–µ"

    caption = (
        f"{title_line}\n"  # –í–º–µ—Å—Ç–æ [–†–ï–ö–õ–ê–ú–ê] –≤—ã–≤–æ–¥–∏–º –∫–Ω–æ–ø–∫—É/–Ω–∞–∑–≤–∞–Ω–∏–µ
        f"{ad_object.text}\n\n"
        f"–¶–µ–Ω–∞: {ad_object.price} —Ä—É–±.\n"
        f"–ö–æ–ª-–≤–æ: {ad_object.quantity}\n"
        f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {ad_object.category or '‚Äî'}"
        + (f" / {ad_object.subcategory}" if ad_object.subcategory else "")
        + f"\n–ì–æ—Ä–æ–¥: {ad_object.city or '‚Äî'}\n\n"
        f"–ò–ù–ù: {inn_info}\n"
        f"–§–ò–û/–ö–æ–º–ø–∞–Ω–∏—è: {fio_info}\n"
        f"–ö–æ–Ω—Ç–∞–∫—Ç—ã: @{user.username if user.username else '‚Äî'}\n\n"
        "–ù–∞–∂–º–∏—Ç–µ ¬´–ö—É–ø–∏—Ç—å¬ª, —á—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å —Å–¥–µ–ª–∫—É —á–µ—Ä–µ–∑ –±–æ—Ç–∞."
    )

    kb = types.InlineKeyboardMarkup(inline_keyboard=[[
        types.InlineKeyboardButton(
            text=f"–ö—É–ø–∏—Ç—å ¬´{ad_object.inline_button_text}¬ª" if ad_object.inline_button_text else "–ö—É–ø–∏—Ç—å",
            callback_data=f"buy_ad_{ad_object.id}"
        ),
        types.InlineKeyboardButton(
            text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ",
            callback_data=f"details_ad_{ad_object.id}"
        )
    ]])

    photos_list = ad_object.photos.split(",") if ad_object.photos else []
    if photos_list and photos_list[0]:
        await bot.send_photo(chat_id, photos_list[0], caption=caption, reply_markup=kb)
    else:
        await bot.send_message(chat_id, caption, reply_markup=kb)

def reserve_funds_for_sale(bot: Bot, buyer_id, seller_id, ad_obj):
    with SessionLocal() as session:
        buyer = session.query(User).filter_by(id=buyer_id).first()
        if not buyer:
            return "–ü–æ–∫—É–ø–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω."
        seller = session.query(User).filter_by(id=seller_id).first()
        if not seller:
            return "–ü—Ä–æ–¥–∞–≤–µ—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω."

        price = ad_obj.price if ad_obj.price else Decimal("0")
        if buyer.balance < price:
            return f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –ù—É–∂–Ω–æ {price}, –∞ —É –≤–∞—Å {buyer.balance}."

        buyer.balance = buyer.balance - price

        sale = Sale(
            ad_id=ad_obj.id,
            buyer_id=buyer_id,
            seller_id=seller_id,
            amount=price,
            status="pending"  # –í –ë–î —Ö—Ä–∞–Ω–∏—Ç—Å—è "pending", –∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ rus_status()
        )
        session.add(sale)
        session.commit()

    return "ok"
